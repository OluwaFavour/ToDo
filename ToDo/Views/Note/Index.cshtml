@model IEnumerable<ToDo.Models.Note>
@{
    ViewData["Title"] = "Notes";
}

<div class="jumbotron">

    @Html.ActionLink("Add Note", "Add", "Note", null, new { @class = "btn btn-primary rounded-sm float-right mt-n4" })
    <br />
    <hr />

    @if (Model.Count() == 0)
    {
        <h3 class="display-4 pt-2">You have no notes yet.</h3>
    }
    else
    {
        foreach (var note in Model)
        {
            <div class="container list-inline">
                <div class="list-inline-item">
                    <h3>@Html.ActionLink(note.Title, "Details", new { id = note.ID}, new { @class = "text-decoration-none", style = "color: black;" })
                        <span style="background-color: @note.Color.ToString()" class="badge">@note.Color.ToString().Substring(0, 1).ToUpper()@note.Color.ToString().Substring(1).ToLower()
                        </span>
                    </h3>
                    <p class="small text-secondary">@note.DateCreated</p>
                </div>
                <div class="float-right list-inline-item pt-2">
                    @Html.ActionLink("Edit", "Edit", "Note", new { id = note.ID }, new { @class = "btn btn-primary rounded-sm" })
                    @Html.ActionLink("Delete", "Delete", "Note", new { id = note.ID }, new { @class = "btn btn-danger rounded-sm" })
                </div>
            </div>
            <hr />
        }
    }
</div>